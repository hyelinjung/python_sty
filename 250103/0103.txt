※ 데이터 전처리 : 모델 학습의 성능과 정확성을 높이기 위해 row 데이터를 정리하고 변환하는 
->주요단계)
-결측값 처리(데이터셋에 누락된 값), 결측값이 있는 행이나 열을 삭제 하거나 평균,중앙값등으로 결측값을 채운다
-이상치(데이터 분포에서 일반적인 패턴에서 크게 벗어난 값)을 처리함
-데이터 스케일링(서로 다른 범위를 가진 변수들이 동일한 범위에서 비교될 수 있도록 데이터를 변환한다)
->표준화(평균이0 표준편차가1이 되도록 변환) / 정규화(최소값0 최대값1로 변환)
-범주형(Categorical) 데이터를 수치형(Numerical)으로 변환
->label encoding 범주형 값을 고유 숫자로 변환
->one-Hot Encoding: 범주형 값을 이진 벡터로 변환
※random_state=42
->데이터 분할 시 랜덤성을 제어하는 파라미터
->왜 사용하는 가? 훈련하기 위해 데이터를 무작위로 나누기 때문에, 실행하 때마다 결과가 달라질 수 있다.
결과가 같기 위해선 이를 사용하면 매번 동일한 방식으로 데이터를 나눌 수 있다

※MSE 사용하는 이유
회귀모델에서 예측값과 실제값 사이의 차이를 측정하기 위해 자주 사용하는 손실함수.
->직관적인 해석: MSE는 오차의 제곱 평균을 의미하기 때문에 손실값이 클수록 예측값이 실제값과 더 멀리 떨어져 있다는 말
즉, MSE가 0에 가까우면 모델이 거의 완벽한 예측을 함
※※ MSE vs MAE 
-> 전자)큰 오차에 더 큰 페널티를 주기 때문에 큰 오차를 줄이는데 효과적인. 후자)각 오차의 절대값을 평균 내기 때문에 이상치에 덜 민감하며, 전반적인 오차의 크기를 평가하는데 적함

※matplotlib.pyplot.plot() 함수
->선 크래프를 그리기 위한 함수. y=x 대각선을 그려 완벽한 예측을 시각적으로 나타낸다.
y=x선 
'같' 예측값과 실제값이 정확하게 일치
'아래' 모델이 실제값보다 낮은 값을 예측
'위' 실제값보다 높은 값 예측


